@page "/Todo"
@using Blink3.Web.Interfaces
@using Blink3.DataAccess.Entities
@using Blink3.DataAccess.Models

<PageTitle>Todo list</PageTitle>
<h1 class="border-bottom">Todo list</h1>
@foreach (UserTodo todo in Todos)
{
    <ul class="list-group list-group-horizontal rounded-0 bg-transparent border-bottom">
        <li class="list-group-item d-flex align-items-center px-0 py-1 rounded-0 border-0 bg-transparent">
            <div class="form-check">
                <input
                    type="checkbox"
                    class="form-check-input me-0"
                    aria-label="@todo.Label"
                    checked="@todo.Complete"
                    @onchange="async (args) => await UpdateTodoAsync(todo, !todo.Complete)"
                />
            </div>
        </li>
        <li class="list-group-item px-3 py-1 d-flex align-items-center flex-grow-1 border-0 bg-transparent">
            <p class="lead fw-semibold mb-0">@todo.Label
                @if (todo.Description is not null)
                {
                    <br/><small class="fw-normal">@todo.Description</small>
                }
            </p>
        </li>
        <li class="list-group-item px-0 py-1 rounded-0 border-0 bg-transparent">
            <div class="d-flex flex-row justify-content-end mb-1 h-100">
                <Button Color="ButtonColor.None" href="#" class="my-auto" @onclick="async (_) => await DeleteAsync(todo.Id)"><Icon Name="IconName.TrashFill" Color="IconColor.Danger" Size="IconSize.x4"></Icon></Button>
            </div>
        </li>
    </ul>
}

<h2>Create Product Form</h2>
<EditForm Model="_todo" OnSubmit="@CreateTodoAsync" class="card card-body bg-light mt-5">
    <div class="form-group row">
        <label for="name" class="col-md-2 col-form-label">Label:</label>
        <div class="col-md-10">
            <InputText id="name" class="form-control" @bind-Value="_todo.Label" />
        </div>
    </div>
    <div class="form-group row">
        <label for="supplier" class="col-md-2 col-form-label">Description:</label>
        <div class="col-md-10">
            <InputTextArea id="supplier" class="form-control" @bind-Value="_todo.Description" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 text-right">
            <Button Type="ButtonType.Submit" Color="ButtonColor.Primary">Create</Button>
        </div>
    </div>
</EditForm>

@code {
    private IEnumerable<UserTodo> Todos { get; set; } = [];
    private UserTodoDto _todo = new() {Label = ""};

    [Inject] public ITodoHttpRepository TodoHttpRepository { get; set; } = null!;

    protected override async Task OnInitializedAsync() => await UpdateTodosAsync();

    private async Task UpdateTodosAsync() => Todos = await TodoHttpRepository.GetAsync();

    private async Task CreateTodoAsync()
    {
        UserTodo newTodo = await TodoHttpRepository.AddAsync(_todo);
        Todos = Todos.Append(newTodo);
        _todo = new UserTodoDto { Label = "" };
    }
    
    private async Task UpdateTodoAsync(UserTodo todo, bool complete)
    {
        todo.Complete = complete;
        
        await TodoHttpRepository.UpdateAsync(todo.Id, new UserTodoDto()
        {
            Label = todo.Label,
            Description = todo.Description,
            Complete = complete
        });
    }
    
    private async Task DeleteAsync(int id)
    {
        await TodoHttpRepository.DeleteAsync(id);
        await UpdateTodosAsync();
    }
}