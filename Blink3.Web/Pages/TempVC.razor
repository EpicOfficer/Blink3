@page "/guilds/{GuildId}/TempVC"
@using Blink3.Core.Entities
@using Microsoft.AspNetCore.JsonPatch
@using Blink3.Core.Extensions
@using Blink3.Core.Models
@using Blink3.Web.Interfaces
@inject IBlinkGuildConfigService BlinkGuildConfig
@inject IDiscordGuildService DiscordGuildService

<PageTitle>Temporary VC settings</PageTitle>

<h1 class="mb-2 pb-2">Temporary VC settings</h1>

 @if (!string.IsNullOrWhiteSpace(_notificationMessage))
{
    <div class="alert alert-info mt-3">
        @_notificationMessage
    </div>
}

@if (_blinkGuild is null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="_blinkGuild" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator/>

        @if (_categories is not null)
        {
            <div class="mb-3">
                <label for="tempVcCategory" class="form-label">Temporary VC category</label>
                <InputSelect id="tempVcCategory" class="form-select" @bind-value="SelectedCategoryId" TValue="string"
                             ValueExpression="@(() => SelectedCategoryId)">
                    <option value="" selected="selected">None</option>
                    @foreach (DiscordPartialChannel category in _categories)
                    {
                        <option value="@category.Id.ToString()">@category.Name</option>
                    }
                </InputSelect>
            </div>
        }

        <div>
            <button type="submit" class="btn btn-primary">Save changes</button>
        </div>
    </EditForm>
}

@code {
    [Parameter] public string? GuildId { get; set; }
    
    private BlinkGuild? _initialGuild;
    private BlinkGuild? _blinkGuild;
    private IEnumerable<DiscordPartialChannel>? _categories;
    private string SelectedCategoryId { get; set; } = string.Empty;

    private string _notificationMessage = string.Empty;
    
    protected override async Task OnInitializedAsync()
    {
        await GetCategories();
        await GetGuild();
    }

    protected override async Task OnParametersSetAsync()
    {
        await GetCategories();
        await GetGuild();
    }

    private async Task GetGuild()
    {
        _notificationMessage = string.Empty;
        _blinkGuild = await BlinkGuildConfig.GetByIdAsync(GuildId);
        SetInitialGuild();
    }

    private async Task GetCategories()
    {
        _categories = await DiscordGuildService.GetCategories(GuildId);
    } 
    
    private void SetInitialGuild()
    {
        if (_blinkGuild is null) return;
        SelectedCategoryId = _blinkGuild.TemporaryVcCategoryId.ToString() ?? string.Empty;
        _initialGuild = new BlinkGuild
        {
            Id = _blinkGuild.Id,
            TemporaryVcCategoryId = _blinkGuild.TemporaryVcCategoryId
        };
    }

    private async Task HandleValidSubmit()
    {
        if (_blinkGuild is null)
        {
            _notificationMessage = "An error occurred submitting data";
            return;
        }
        
        JsonPatchDocument<BlinkGuild> patchDocument = new();
        
        _blinkGuild.TemporaryVcCategoryId = string.IsNullOrWhiteSpace(SelectedCategoryId) ? null : SelectedCategoryId?.ToUlong();

        if (_initialGuild?.TemporaryVcCategoryId != _blinkGuild?.TemporaryVcCategoryId)
            patchDocument.Replace(x => x.TemporaryVcCategoryId, _blinkGuild?.TemporaryVcCategoryId);

        if (await BlinkGuildConfig.PatchAsync(GuildId, patchDocument))
        {
            SetInitialGuild();
            _notificationMessage = "Changes have been saved successfully.";
        }
        else
        {
            _notificationMessage = "Failed to save changes.";
        }
    }
}