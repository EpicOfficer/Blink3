@using System.Security.Claims
@inherits LayoutComponentBase
@inject NavigationManager Navigation;

<div class="page">
    <Sidebar @ref="_sidebar"
             IconName="IconName.BootstrapFill"
             Title="Blink3"
             DataProvider="SidebarDataProvider"/>

    <main>
        <div class="top-row px-4">
            <LoginDisplay/>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@* ReSharper disable InconsistentNaming *@

@code {
    Sidebar _sidebar = null!;
    List<NavItem>? _navItems;

    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; } = null!;

    protected override Task OnInitializedAsync()
    {
        Navigation.LocationChanged += async (_, _) =>
        {
            await GetNavItems();
            await _sidebar.RefreshDataAsync();
        };

        return Task.CompletedTask;
    }

    private async Task<SidebarDataProviderResult> SidebarDataProvider(SidebarDataProviderRequest request)
    {
        _navItems ??= await GetNavItems();

        return await Task.FromResult(request.ApplyTo(_navItems));
    }

    private async Task<List<NavItem>> GetNavItems()
    {
        _navItems = new List<NavItem>
        {
            new()
            {
                Id = "1",
                Href = "/",
                IconName = IconName.HouseDoorFill,
                Text = "Home",
                Match = NavLinkMatch.All
            }
        };

        AuthenticationState authState = await authenticationStateTask;
        ClaimsPrincipal user = authState.User;

        if (user.Identity?.IsAuthenticated is true)
        {
            _navItems.Add(new NavItem
            {
                Id = "2",
                Href = "/todo",
                IconName = IconName.Pencil,
                Text = "Todo list"
            });
        }

        return _navItems;
    }

}

@* ReSharper restore InconsistentNaming *@