@page "/guilds/{GuildId}/Wordle"
@using Blink3.Core.Entities
@using Microsoft.AspNetCore.JsonPatch
@using Newtonsoft.Json
@using System.Text
@inject HttpClient HttpClient

<PageTitle>Wordle settings</PageTitle>

<h1 class="mb-2 pb-2">Wordle settings</h1>

@if (_blinkGuild is null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="_blinkGuild" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator/>

        <div class="mb-3">
            <label for="bgColour" class="form-label">Background colour</label>
            <input id="bgColour" class="form-control form-control-color" type="color" @bind-value="_blinkGuild.BackgroundColour"/>
        </div>

        <div class="mb-3">
            <label for="textColour" class="form-label">Text colour</label>
            <input id="textColour" class="form-control form-control-color" type="color" @bind-value="_blinkGuild.TextColour"/>
        </div>

        <div class="mb-3">
            <label for="correctColour" class="form-label">Correct colour</label>
            <input id="correctColour" class="form-control form-control-color" type="color" @bind-value="_blinkGuild.CorrectTileColour"/>
        </div>

        <div class="mb-3">
            <label for="misplacedColour" class="form-label">Misplaced colour</label>
            <input id="misplacedColour" class="form-control form-control-color" type="color" @bind-value="_blinkGuild.MisplacedTileColour"/>
        </div>

        <div class="mb-3">
            <label for="incorrectColour" class="form-label">Incorrect colour</label>
            <input id="incorrectColour" class="form-control form-control-color" type="color" @bind-value="_blinkGuild.IncorrectTileColour"/>
        </div>

        <div>
            <button type="submit" class="btn btn-primary">Save changes</button>
        </div>
    </EditForm>

    @if (!string.IsNullOrWhiteSpace(notificationMessage))
    {
        <div class="alert alert-info mt-3">
            @notificationMessage
        </div>
    }
}

@code {
    [Parameter] public string? GuildId { get; set; }
    private BlinkGuild? _initialGuild;
    private BlinkGuild? _blinkGuild;

    private string notificationMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await GetGuild();
    }

    protected override async Task OnParametersSetAsync()
    {
        await GetGuild();
    }

    private async Task GetGuild()
    {
        notificationMessage = string.Empty;
        _blinkGuild = await HttpClient.GetFromJsonAsync<BlinkGuild>($"api/BlinkGuilds/{GuildId}");
        
        SetInitialGuild();
    }

    private void SetInitialGuild()
    {
        if (_blinkGuild is null) return;
        _initialGuild = new BlinkGuild
        {
            Id = _blinkGuild.Id,
            BackgroundColour = _blinkGuild.BackgroundColour,
            TextColour = _blinkGuild.TextColour,
            CorrectTileColour = _blinkGuild.CorrectTileColour,
            MisplacedTileColour = _blinkGuild.MisplacedTileColour,
            IncorrectTileColour = _blinkGuild.IncorrectTileColour
        };
    }
    
    private async Task HandleValidSubmit()
    {
        HttpMethod method = new("PATCH");
        JsonPatchDocument<BlinkGuild> patchDocument = new();

        if (_initialGuild?.BackgroundColour != _blinkGuild?.BackgroundColour)
            patchDocument.Replace(x => x.BackgroundColour, _blinkGuild?.BackgroundColour);

        if (_initialGuild?.TextColour != _blinkGuild?.TextColour)
            patchDocument.Replace(x => x.TextColour, _blinkGuild?.TextColour);

        if (_initialGuild?.CorrectTileColour != _blinkGuild?.CorrectTileColour)
            patchDocument.Replace(x => x.CorrectTileColour, _blinkGuild?.CorrectTileColour);

        if (_initialGuild?.MisplacedTileColour != _blinkGuild?.MisplacedTileColour)
            patchDocument.Replace(x => x.MisplacedTileColour, _blinkGuild?.MisplacedTileColour);

        if (_initialGuild?.IncorrectTileColour != _blinkGuild?.IncorrectTileColour)
            patchDocument.Replace(x => x.IncorrectTileColour, _blinkGuild?.IncorrectTileColour);

        HttpRequestMessage request = new(method, $"api/BlinkGuilds/{GuildId}")
        {
            Content = new StringContent(JsonConvert.SerializeObject(patchDocument), Encoding.UTF8, "application/json-patch+json")
        };

        HttpResponseMessage httpResponseMessage = await HttpClient.SendAsync(request);

        if (httpResponseMessage.IsSuccessStatusCode)
        {
            SetInitialGuild();
            notificationMessage = "Changes have been saved successfully.";
        }
        else
        {
            notificationMessage = "Failed to save changes.";
        }
    }

}